{
  "version": 3,
  "sources": ["../src/plugin.ts"],
  "sourcesContent": ["import { Editor } from 'tinymce';\r\nimport { ACListItem, AutoCompleteOptions } from '.';\r\n\r\nconst wordJoiner = '\\u2060';\r\n\r\nconst render = (item: ACListItem, index: number, opts: AutoCompleteOptions<string>) =>\r\n  `<li><a href=\"javascript:;\"><span data-idx=\"${index}\">${item[opts.queryBy]}</span></a></li>`;\r\n\r\nconst insert = (item: ACListItem, opts: AutoCompleteOptions<string>) =>\r\n  `<span>${item[opts.insertFrom || opts.queryBy]}</span>&nbsp;`;\r\n\r\nconst highlighter = (text: string) => text;\r\n\r\nconst autoCompleteDefaults: AutoCompleteOptions<string> = {\r\n  source: [],\r\n  delay: 500,\r\n  queryBy: 'name',\r\n  insertFrom: 'name',\r\n  items: 10,\r\n  delimiter: '@',\r\n  render,\r\n  insert,\r\n  highlighter,\r\n};\r\n\r\nclass AutoComplete {\r\n  private editor: any;\r\n  private options: AutoCompleteOptions<string>;\r\n  private query: string = '';\r\n  private searchTimeout?: number;\r\n  private $dropdown: HTMLElement | null = null;\r\n  private handleEditorScroll!: () => void;\r\n  hasFocus: boolean = true;\r\n\r\n  constructor(editor: any, options: Partial<AutoCompleteOptions<string>>) {\r\n    this.editor = editor;\r\n    this.options = Object.assign({}, autoCompleteDefaults, options);\r\n\r\n    // Render the input and bind events.\r\n    this.renderInput();\r\n    this.bindEvents();\r\n  }\r\n\r\n  private renderInput(): void {\r\n    const rawHtml = `\r\n      <span id=\"autocomplete\">\r\n          <span id=\"autocomplete-delimiter\">${this.options.delimiter || ''}</span>\r\n          <span id=\"autocomplete-searchtext\"><span class=\"dummy\">${wordJoiner}</span></span>\r\n      </span>\r\n    `;\r\n\r\n    this.editor.execCommand('mceInsertContent', false, rawHtml);\r\n    this.editor.focus();\r\n\r\n    // Move the caret inside the #autocomplete-searchtext\r\n    const inputElement = this.editor.selection.dom.select('span#autocomplete-searchtext span')[0];\r\n    this.editor.selection.select(inputElement);\r\n    this.editor.selection.collapse(0);\r\n  }\r\n\r\n  private bindEvents(): void {\r\n    this.editor.on('keyup', this.rteKeyUp.bind(this));\r\n    this.editor.on('keydown', this.rteKeyDown.bind(this), true);\r\n    this.editor.on('click', this.rteClicked.bind(this));\r\n\r\n    document.body.addEventListener('click', this.rteLostFocus.bind(this));\r\n\r\n    // Store reference so we can unbind easily\r\n    this.handleEditorScroll = () => this.cleanUp(true);\r\n    this.editor.getWin().addEventListener('scroll', this.handleEditorScroll);\r\n  }\r\n\r\n  private rteKeyUp(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n      case 'Shift':\r\n      case 'Control':\r\n      case 'Alt':\r\n        // Do nothing\r\n        break;\r\n      case 'Backspace':\r\n        // If the query is empty, remove mention\r\n        if (this.query === '') {\r\n          this.cleanUp(true);\r\n        } else {\r\n          this.lookup();\r\n        }\r\n        break;\r\n      case 'Tab':\r\n      case 'Enter':\r\n        if (this.$dropdown) {\r\n          const activeItem = this.$dropdown.querySelector('li.active') as HTMLElement;\r\n          if (activeItem) {\r\n            this.select(activeItem.dataset);\r\n            this.cleanUp(false);\r\n          } else {\r\n            this.cleanUp(true);\r\n          }\r\n        }\r\n        break;\r\n      case 'Escape':\r\n        this.cleanUp(true);\r\n        break;\r\n      default:\r\n        this.lookup();\r\n    }\r\n  }\r\n\r\n  private rteKeyDown(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'Tab':\r\n      case 'Enter':\r\n      case 'Escape':\r\n        // Prevent the default action so we handle it in rteKeyUp\r\n        event.preventDefault();\r\n        break;\r\n      case 'ArrowUp':\r\n        event.preventDefault();\r\n        if (this.$dropdown) {\r\n          this.highlightPreviousResult();\r\n        }\r\n        break;\r\n      case 'ArrowDown':\r\n        event.preventDefault();\r\n        if (this.$dropdown) {\r\n          this.highlightNextResult();\r\n        }\r\n        break;\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  private rteClicked(event: MouseEvent): void {\r\n    const target = event.target as HTMLElement;\r\n    if (this.hasFocus && target.parentElement?.id !== 'autocomplete-searchtext') {\r\n      this.cleanUp(true);\r\n    }\r\n  }\r\n\r\n  private rteLostFocus(): void {\r\n    if (this.hasFocus) {\r\n      this.cleanUp(true);\r\n    }\r\n  }\r\n\r\n  private lookup(): void {\r\n    // If we no longer have focus, bail out\r\n    if (!this.hasFocus) return;\r\n\r\n    const searchTextElement = this.editor.getBody().querySelector('#autocomplete-searchtext') as HTMLElement | null;\r\n    this.query = searchTextElement?.textContent?.trim().replace(wordJoiner, '') || '';\r\n\r\n    // If there's no #autocomplete in DOM anymore, bail out\r\n    if (!this.editor.getBody().querySelector('#autocomplete')) {\r\n      return;\r\n    }\r\n\r\n    // Show the dropdown if not already present\r\n    if (!this.$dropdown) {\r\n      this.show();\r\n    }\r\n\r\n    clearTimeout(this.searchTimeout);\r\n    this.searchTimeout = window.setTimeout(() => {\r\n      const items = this.options.source;\r\n      if (!items) return;\r\n\r\n      if (Array.isArray(items)) {\r\n        this.process(items);\r\n      } else {\r\n        // source is a function\r\n        items(this.query, this.options.delimiter!, this.process.bind(this));\r\n      }\r\n    }, this.options.delay);\r\n  }\r\n\r\n  private process(data: ACListItem[]): void {\r\n    if (!this.hasFocus) return;\r\n\r\n    console.log('data Received in process', data);\r\n    const matchedItems = data.filter(\r\n      this.options.matcher ||\r\n        ((item) => item[this.options.queryBy].toLowerCase().includes(this.query.toLowerCase()))\r\n    );\r\n\r\n    const sortedItems = this.options.sorter ? this.options.sorter(matchedItems) : matchedItems;\r\n    const limitedItems = sortedItems.slice(0, this.options.items);\r\n\r\n    const result = limitedItems.reduce((r, item, i) => {\r\n      const element = document.createElement('div');\r\n      element.innerHTML = this.options.render!(item, i, this.options);\r\n      const text = element.textContent || '';\r\n      element.innerHTML = element.innerHTML.replace(text, this.options.highlighter!(text) || '');\r\n      Object.entries(item).forEach(([key, val]) => {\r\n        element.dataset[key] = `${val}`;\r\n      });\r\n      r += element.outerHTML;\r\n      return r;\r\n    }, '');\r\n\r\n    if (result.length) {\r\n      if (this.$dropdown) {\r\n        this.$dropdown.innerHTML = result;\r\n        this.$dropdown.style.display = 'block';\r\n      }\r\n    } else {\r\n      if (this.$dropdown) {\r\n        this.$dropdown.style.display = 'none';\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(): void {\r\n    const dropdown = document.createElement('ul');\r\n    dropdown.className = 'rte-autocomplete dropdown-menu';\r\n    dropdown.innerHTML = '<li class=\"loading\"></li>';\r\n\r\n    const offset = this.offset();\r\n    dropdown.style.top = `${offset.top}px`;\r\n    dropdown.style.left = `${offset.left}px`;\r\n\r\n    document.body.appendChild(dropdown);\r\n    dropdown.addEventListener('click', (e) => this.autoCompleteClick(e));\r\n    this.$dropdown = dropdown;\r\n  }\r\n\r\n  private autoCompleteClick(event: MouseEvent): void {\r\n    const li = (event.target as HTMLElement).closest('li');\r\n    if (!li) return;\r\n\r\n    // If the dataset is actually on the <span>:\r\n    const span = li.querySelector('span[data-idx]');\r\n    if (span) {\r\n      const val = span.innerHTML;\r\n      console.log('Span dataset:', (span as HTMLElement).dataset);\r\n      this.select({ value: val });\r\n    }\r\n\r\n    this.cleanUp(false);\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  private highlightPreviousResult(): void {\r\n    const items = this.$dropdown?.querySelectorAll('li') || [];\r\n    const activeIndex = Array.from(items).findIndex((item) => item.classList.contains('active'));\r\n    const newIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n\r\n    items.forEach((item) => item.classList.remove('active'));\r\n    if (items[newIndex]) {\r\n      items[newIndex].classList.add('active');\r\n    }\r\n  }\r\n\r\n  private highlightNextResult(): void {\r\n    const items = this.$dropdown?.querySelectorAll('li') || [];\r\n    const activeIndex = Array.from(items).findIndex((item) => item.classList.contains('active'));\r\n    const newIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n\r\n    items.forEach((item) => item.classList.remove('active'));\r\n    if (items[newIndex]) {\r\n      items[newIndex].classList.add('active');\r\n    }\r\n  }\r\n\r\n  private select(item: DOMStringMap): void {\r\n    this.editor.focus();\r\n\r\n    // Grab the autocomplete element from the body or activeElement\r\n    const autocompleteElement = this.editor.getBody().querySelector('#autocomplete');\r\n    if (!autocompleteElement) return;\r\n\r\n    this.editor.dom.remove(autocompleteElement);\r\n    this.options.insertFrom = 'value';\r\n\r\n    console.log('item', item, this.options, this.options.insert);\r\n    const result = this.options.insert!(item as ACListItem, this.options);\r\n    console.log('result', result);\r\n\r\n    this.editor.execCommand('mceInsertContent', false, result);\r\n  }\r\n\r\n  private offset(): { top: number; left: number } {\r\n    // Find #autocomplete if it still exists\r\n    const autocompleteElement = this.editor.getBody().querySelector('#autocomplete') as HTMLElement | null;\r\n    if (!autocompleteElement) {\r\n      // If not found, just return (avoid throwing an error)\r\n      return { top: 0, left: 0 };\r\n    }\r\n\r\n    // Calculate positions\r\n    const rect = autocompleteElement.getBoundingClientRect();\r\n    const editorDoc = this.editor.getDoc();\r\n    const scrollTop = editorDoc?.documentElement?.scrollTop || 0;\r\n    const scrollLeft = editorDoc?.documentElement?.scrollLeft || 0;\r\n\r\n    // Slight offset\r\n    return {\r\n      top: rect.top + scrollTop + autocompleteElement.offsetHeight + 5,\r\n      left: rect.left + scrollLeft,\r\n    };\r\n  }\r\n\r\n  private cleanUp(rollback: boolean): void {\r\n    this.unbindEvents();\r\n    this.hasFocus = false;\r\n\r\n    this.$dropdown?.remove();\r\n    this.$dropdown = null;\r\n\r\n    if (rollback) {\r\n      // The user aborted mention\r\n      const text = this.query;\r\n      const selection = this.editor.dom.select('span#autocomplete')[0];\r\n      if (!selection) return;\r\n\r\n      const replacement = document.createElement('p');\r\n      replacement.textContent = this.options.delimiter + text;\r\n\r\n      this.editor.dom.replace(replacement, selection);\r\n      this.editor.selection.select(replacement);\r\n      this.editor.selection.collapse();\r\n    } else {\r\n      // The mention was completed successfully\r\n      console.log('mentionfinished');\r\n      this.editor.fire('mentionfinished');\r\n    }\r\n  }\r\n\r\n  private unbindEvents(): void {\r\n    document.body.removeEventListener('click', this.rteLostFocus.bind(this));\r\n    this.editor.off('keyup', this.rteKeyUp.bind(this));\r\n    this.editor.off('keydown', this.rteKeyDown.bind(this));\r\n    this.editor.off('click', this.rteClicked.bind(this));\r\n    this.editor.getWin().removeEventListener('scroll', this.handleEditorScroll);\r\n  }\r\n}\r\n\r\nconst PLUGIN_NAME = 'mention';\r\nconst getMetadata = () => {\r\n  return {\r\n    name: PLUGIN_NAME,\r\n    author: 'Surya Pratap',\r\n    url: 'https://github.com/suryapratap/tinymce-mention-plugin',\r\n  };\r\n};\r\n\r\nfunction registerPlugin(editor: Editor) {\r\n  let autoComplete: AutoComplete | undefined;\r\n\r\n  const autoCompleteData = editor.getParam(PLUGIN_NAME) as AutoCompleteOptions<string[]>;\r\n  const delimiter = Array.isArray(autoCompleteData.delimiter)\r\n    ? autoCompleteData.delimiter\r\n    : [autoCompleteData.delimiter || '@'];\r\n\r\n  function prevCharIsSpace() {\r\n    const range = editor.selection.getRng();\r\n    const start = range.startOffset;\r\n    // If the container text is empty or we can't read it, fallback to an empty string\r\n    const text = (range.startContainer?.textContent || '').toString();\r\n    return !text.charAt(start - 1)?.trim().length;\r\n  }\r\n\r\n  editor.on('keypress', (event: KeyboardEvent) => {\r\n    // If not a recognized delimiter, ignore\r\n    if (!delimiter.includes(event.key)) {\r\n      console.log('not delimiter', event.key, { delimiter });\r\n      return;\r\n    }\r\n    // If previous character isn't space, ignore\r\n    if (!prevCharIsSpace()) {\r\n      console.log('not prevCharIsSpace', event.key, { delimiter });\r\n      return;\r\n    }\r\n    // If an autoComplete is already open and hasFocus, ignore\r\n    if (autoComplete && autoComplete.hasFocus) {\r\n      console.log('not autoComplete', event.key, { delimiter }, autoComplete.hasFocus);\r\n      return;\r\n    }\r\n\r\n    // Activate mention\r\n    event.preventDefault();\r\n    console.log('activate mentions autocomplete', event.key, { delimiter }, autoComplete?.hasFocus);\r\n\r\n    autoComplete = new AutoComplete(editor, {\r\n      ...autoCompleteData,\r\n      delimiter: event.key,\r\n    });\r\n  });\r\n\r\n  // Once mention is finished, kill reference\r\n  editor.on('mentionfinished', () => {\r\n    console.log('mentionfinished plugin event');\r\n    autoComplete = undefined;\r\n  });\r\n\r\n  return { getMetadata };\r\n}\r\n\r\n// Register plugin\r\n(window as any).tinymce.PluginManager.add(PLUGIN_NAME, registerPlugin);\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAGA,MAAM,aAAa;AAEnB,MAAM,SAAS,CAAC,MAAkB,OAAe,SAC/C,8CAA8C,KAAK,KAAK,KAAK,KAAK,OAAO,CAAC;AAE5E,MAAM,SAAS,CAAC,MAAkB,SAChC,SAAS,KAAK,KAAK,cAAc,KAAK,OAAO,CAAC;AAEhD,MAAM,cAAc,CAAC,SAAiB;AAEtC,MAAM,uBAAoD;AAAA,EACxD,QAAQ,CAAC;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AACF;AAEA,MAAM,aAAa;AAAA,EASjB,YAAY,QAAa,SAA+C;AANxE,SAAQ,QAAgB;AAExB,SAAQ,YAAgC;AAExC,oBAAoB;AAGlB,SAAK,SAAS;AACd,SAAK,UAAU,OAAO,OAAO,CAAC,GAAG,sBAAsB,OAAO;AAG9D,SAAK,YAAY;AACjB,SAAK,WAAW;AAAA,EAClB;AAAA,EAEQ,cAAoB;AAC1B,UAAM,UAAU;AAAA;AAAA,8CAE0B,KAAK,QAAQ,aAAa,EAAE;AAAA,mEACP,UAAU;AAAA;AAAA;AAIzE,SAAK,OAAO,YAAY,oBAAoB,OAAO,OAAO;AAC1D,SAAK,OAAO,MAAM;AAGlB,UAAM,eAAe,KAAK,OAAO,UAAU,IAAI,OAAO,mCAAmC,EAAE,CAAC;AAC5F,SAAK,OAAO,UAAU,OAAO,YAAY;AACzC,SAAK,OAAO,UAAU,SAAS,CAAC;AAAA,EAClC;AAAA,EAEQ,aAAmB;AACzB,SAAK,OAAO,GAAG,SAAS,KAAK,SAAS,KAAK,IAAI,CAAC;AAChD,SAAK,OAAO,GAAG,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,IAAI;AAC1D,SAAK,OAAO,GAAG,SAAS,KAAK,WAAW,KAAK,IAAI,CAAC;AAElD,aAAS,KAAK,iBAAiB,SAAS,KAAK,aAAa,KAAK,IAAI,CAAC;AAGpE,SAAK,qBAAqB,MAAM,KAAK,QAAQ,IAAI;AACjD,SAAK,OAAO,OAAO,EAAE,iBAAiB,UAAU,KAAK,kBAAkB;AAAA,EACzE;AAAA,EAEQ,SAAS,OAA4B;AAC3C,YAAQ,MAAM,KAAK;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAEH;AAAA,MACF,KAAK;AAEH,YAAI,KAAK,UAAU,IAAI;AACrB,eAAK,QAAQ,IAAI;AAAA,QACnB,OAAO;AACL,eAAK,OAAO;AAAA,QACd;AACA;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,YAAI,KAAK,WAAW;AAClB,gBAAM,aAAa,KAAK,UAAU,cAAc,WAAW;AAC3D,cAAI,YAAY;AACd,iBAAK,OAAO,WAAW,OAAO;AAC9B,iBAAK,QAAQ,KAAK;AAAA,UACpB,OAAO;AACL,iBAAK,QAAQ,IAAI;AAAA,UACnB;AAAA,QACF;AACA;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,IAAI;AACjB;AAAA,MACF;AACE,aAAK,OAAO;AAAA,IAChB;AAAA,EACF;AAAA,EAEQ,WAAW,OAA4B;AAC7C,YAAQ,MAAM,KAAK;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAEH,cAAM,eAAe;AACrB;AAAA,MACF,KAAK;AACH,cAAM,eAAe;AACrB,YAAI,KAAK,WAAW;AAClB,eAAK,wBAAwB;AAAA,QAC/B;AACA;AAAA,MACF,KAAK;AACH,cAAM,eAAe;AACrB,YAAI,KAAK,WAAW;AAClB,eAAK,oBAAoB;AAAA,QAC3B;AACA;AAAA,IACJ;AACA,UAAM,gBAAgB;AAAA,EACxB;AAAA,EAEQ,WAAW,OAAyB;AArI9C;AAsII,UAAM,SAAS,MAAM;AACrB,QAAI,KAAK,cAAY,YAAO,kBAAP,mBAAsB,QAAO,2BAA2B;AAC3E,WAAK,QAAQ,IAAI;AAAA,IACnB;AAAA,EACF;AAAA,EAEQ,eAAqB;AAC3B,QAAI,KAAK,UAAU;AACjB,WAAK,QAAQ,IAAI;AAAA,IACnB;AAAA,EACF;AAAA,EAEQ,SAAe;AAlJzB;AAoJI,QAAI,CAAC,KAAK,SAAU;AAEpB,UAAM,oBAAoB,KAAK,OAAO,QAAQ,EAAE,cAAc,0BAA0B;AACxF,SAAK,UAAQ,4DAAmB,gBAAnB,mBAAgC,OAAO,QAAQ,YAAY,QAAO;AAG/E,QAAI,CAAC,KAAK,OAAO,QAAQ,EAAE,cAAc,eAAe,GAAG;AACzD;AAAA,IACF;AAGA,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,KAAK;AAAA,IACZ;AAEA,iBAAa,KAAK,aAAa;AAC/B,SAAK,gBAAgB,OAAO,WAAW,MAAM;AAC3C,YAAM,QAAQ,KAAK,QAAQ;AAC3B,UAAI,CAAC,MAAO;AAEZ,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,aAAK,QAAQ,KAAK;AAAA,MACpB,OAAO;AAEL,cAAM,KAAK,OAAO,KAAK,QAAQ,WAAY,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,MACpE;AAAA,IACF,GAAG,KAAK,QAAQ,KAAK;AAAA,EACvB;AAAA,EAEQ,QAAQ,MAA0B;AACxC,QAAI,CAAC,KAAK,SAAU;AAEpB,YAAQ,IAAI,4BAA4B,IAAI;AAC5C,UAAM,eAAe,KAAK;AAAA,MACxB,KAAK,QAAQ,YACV,CAAC,SAAS,KAAK,KAAK,QAAQ,OAAO,EAAE,YAAY,EAAE,SAAS,KAAK,MAAM,YAAY,CAAC;AAAA,IACzF;AAEA,UAAM,cAAc,KAAK,QAAQ,SAAS,KAAK,QAAQ,OAAO,YAAY,IAAI;AAC9E,UAAM,eAAe,YAAY,MAAM,GAAG,KAAK,QAAQ,KAAK;AAE5D,UAAM,SAAS,aAAa,OAAO,CAAC,GAAG,MAAM,MAAM;AACjD,YAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,cAAQ,YAAY,KAAK,QAAQ,OAAQ,MAAM,GAAG,KAAK,OAAO;AAC9D,YAAM,OAAO,QAAQ,eAAe;AACpC,cAAQ,YAAY,QAAQ,UAAU,QAAQ,MAAM,KAAK,QAAQ,YAAa,IAAI,KAAK,EAAE;AACzF,aAAO,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,GAAG,MAAM;AAC3C,gBAAQ,QAAQ,GAAG,IAAI,GAAG,GAAG;AAAA,MAC/B,CAAC;AACD,WAAK,QAAQ;AACb,aAAO;AAAA,IACT,GAAG,EAAE;AAEL,QAAI,OAAO,QAAQ;AACjB,UAAI,KAAK,WAAW;AAClB,aAAK,UAAU,YAAY;AAC3B,aAAK,UAAU,MAAM,UAAU;AAAA,MACjC;AAAA,IACF,OAAO;AACL,UAAI,KAAK,WAAW;AAClB,aAAK,UAAU,MAAM,UAAU;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,OAAa;AACnB,UAAM,WAAW,SAAS,cAAc,IAAI;AAC5C,aAAS,YAAY;AACrB,aAAS,YAAY;AAErB,UAAM,SAAS,KAAK,OAAO;AAC3B,aAAS,MAAM,MAAM,GAAG,OAAO,GAAG;AAClC,aAAS,MAAM,OAAO,GAAG,OAAO,IAAI;AAEpC,aAAS,KAAK,YAAY,QAAQ;AAClC,aAAS,iBAAiB,SAAS,CAAC,MAAM,KAAK,kBAAkB,CAAC,CAAC;AACnE,SAAK,YAAY;AAAA,EACnB;AAAA,EAEQ,kBAAkB,OAAyB;AACjD,UAAM,KAAM,MAAM,OAAuB,QAAQ,IAAI;AACrD,QAAI,CAAC,GAAI;AAGT,UAAM,OAAO,GAAG,cAAc,gBAAgB;AAC9C,QAAI,MAAM;AACR,YAAM,MAAM,KAAK;AACjB,cAAQ,IAAI,iBAAkB,KAAqB,OAAO;AAC1D,WAAK,OAAO,EAAE,OAAO,IAAI,CAAC;AAAA,IAC5B;AAEA,SAAK,QAAQ,KAAK;AAClB,UAAM,gBAAgB;AACtB,UAAM,eAAe;AAAA,EACvB;AAAA,EAEQ,0BAAgC;AApP1C;AAqPI,UAAM,UAAQ,UAAK,cAAL,mBAAgB,iBAAiB,UAAS,CAAC;AACzD,UAAM,cAAc,MAAM,KAAK,KAAK,EAAE,UAAU,CAAC,SAAS,KAAK,UAAU,SAAS,QAAQ,CAAC;AAC3F,UAAM,WAAW,gBAAgB,IAAI,MAAM,SAAS,IAAI,cAAc;AAEtE,UAAM,QAAQ,CAAC,SAAS,KAAK,UAAU,OAAO,QAAQ,CAAC;AACvD,QAAI,MAAM,QAAQ,GAAG;AACnB,YAAM,QAAQ,EAAE,UAAU,IAAI,QAAQ;AAAA,IACxC;AAAA,EACF;AAAA,EAEQ,sBAA4B;AA/PtC;AAgQI,UAAM,UAAQ,UAAK,cAAL,mBAAgB,iBAAiB,UAAS,CAAC;AACzD,UAAM,cAAc,MAAM,KAAK,KAAK,EAAE,UAAU,CAAC,SAAS,KAAK,UAAU,SAAS,QAAQ,CAAC;AAC3F,UAAM,WAAW,gBAAgB,MAAM,SAAS,IAAI,IAAI,cAAc;AAEtE,UAAM,QAAQ,CAAC,SAAS,KAAK,UAAU,OAAO,QAAQ,CAAC;AACvD,QAAI,MAAM,QAAQ,GAAG;AACnB,YAAM,QAAQ,EAAE,UAAU,IAAI,QAAQ;AAAA,IACxC;AAAA,EACF;AAAA,EAEQ,OAAO,MAA0B;AACvC,SAAK,OAAO,MAAM;AAGlB,UAAM,sBAAsB,KAAK,OAAO,QAAQ,EAAE,cAAc,eAAe;AAC/E,QAAI,CAAC,oBAAqB;AAE1B,SAAK,OAAO,IAAI,OAAO,mBAAmB;AAC1C,SAAK,QAAQ,aAAa;AAE1B,YAAQ,IAAI,QAAQ,MAAM,KAAK,SAAS,KAAK,QAAQ,MAAM;AAC3D,UAAM,SAAS,KAAK,QAAQ,OAAQ,MAAoB,KAAK,OAAO;AACpE,YAAQ,IAAI,UAAU,MAAM;AAE5B,SAAK,OAAO,YAAY,oBAAoB,OAAO,MAAM;AAAA,EAC3D;AAAA,EAEQ,SAAwC;AA3RlD;AA6RI,UAAM,sBAAsB,KAAK,OAAO,QAAQ,EAAE,cAAc,eAAe;AAC/E,QAAI,CAAC,qBAAqB;AAExB,aAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AAAA,IAC3B;AAGA,UAAM,OAAO,oBAAoB,sBAAsB;AACvD,UAAM,YAAY,KAAK,OAAO,OAAO;AACrC,UAAM,cAAY,4CAAW,oBAAX,mBAA4B,cAAa;AAC3D,UAAM,eAAa,4CAAW,oBAAX,mBAA4B,eAAc;AAG7D,WAAO;AAAA,MACL,KAAK,KAAK,MAAM,YAAY,oBAAoB,eAAe;AAAA,MAC/D,MAAM,KAAK,OAAO;AAAA,IACpB;AAAA,EACF;AAAA,EAEQ,QAAQ,UAAyB;AAhT3C;AAiTI,SAAK,aAAa;AAClB,SAAK,WAAW;AAEhB,eAAK,cAAL,mBAAgB;AAChB,SAAK,YAAY;AAEjB,QAAI,UAAU;AAEZ,YAAM,OAAO,KAAK;AAClB,YAAM,YAAY,KAAK,OAAO,IAAI,OAAO,mBAAmB,EAAE,CAAC;AAC/D,UAAI,CAAC,UAAW;AAEhB,YAAM,cAAc,SAAS,cAAc,GAAG;AAC9C,kBAAY,cAAc,KAAK,QAAQ,YAAY;AAEnD,WAAK,OAAO,IAAI,QAAQ,aAAa,SAAS;AAC9C,WAAK,OAAO,UAAU,OAAO,WAAW;AACxC,WAAK,OAAO,UAAU,SAAS;AAAA,IACjC,OAAO;AAEL,cAAQ,IAAI,iBAAiB;AAC7B,WAAK,OAAO,KAAK,iBAAiB;AAAA,IACpC;AAAA,EACF;AAAA,EAEQ,eAAqB;AAC3B,aAAS,KAAK,oBAAoB,SAAS,KAAK,aAAa,KAAK,IAAI,CAAC;AACvE,SAAK,OAAO,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,CAAC;AACjD,SAAK,OAAO,IAAI,WAAW,KAAK,WAAW,KAAK,IAAI,CAAC;AACrD,SAAK,OAAO,IAAI,SAAS,KAAK,WAAW,KAAK,IAAI,CAAC;AACnD,SAAK,OAAO,OAAO,EAAE,oBAAoB,UAAU,KAAK,kBAAkB;AAAA,EAC5E;AACF;AAEA,MAAM,cAAc;AACpB,MAAM,cAAc,MAAM;AACxB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,EACP;AACF;AAEA,SAAS,eAAe,QAAgB;AACtC,MAAI;AAEJ,QAAM,mBAAmB,OAAO,SAAS,WAAW;AACpD,QAAM,YAAY,MAAM,QAAQ,iBAAiB,SAAS,IACtD,iBAAiB,YACjB,CAAC,iBAAiB,aAAa,GAAG;AAEtC,WAAS,kBAAkB;AApW7B;AAqWI,UAAM,QAAQ,OAAO,UAAU,OAAO;AACtC,UAAM,QAAQ,MAAM;AAEpB,UAAM,UAAQ,WAAM,mBAAN,mBAAsB,gBAAe,IAAI,SAAS;AAChE,WAAO,GAAC,UAAK,OAAO,QAAQ,CAAC,MAArB,mBAAwB,OAAO;AAAA,EACzC;AAEA,SAAO,GAAG,YAAY,CAAC,UAAyB;AAE9C,QAAI,CAAC,UAAU,SAAS,MAAM,GAAG,GAAG;AAClC,cAAQ,IAAI,iBAAiB,MAAM,KAAK,EAAE,UAAU,CAAC;AACrD;AAAA,IACF;AAEA,QAAI,CAAC,gBAAgB,GAAG;AACtB,cAAQ,IAAI,uBAAuB,MAAM,KAAK,EAAE,UAAU,CAAC;AAC3D;AAAA,IACF;AAEA,QAAI,gBAAgB,aAAa,UAAU;AACzC,cAAQ,IAAI,oBAAoB,MAAM,KAAK,EAAE,UAAU,GAAG,aAAa,QAAQ;AAC/E;AAAA,IACF;AAGA,UAAM,eAAe;AACrB,YAAQ,IAAI,kCAAkC,MAAM,KAAK,EAAE,UAAU,GAAG,6CAAc,QAAQ;AAE9F,mBAAe,IAAI,aAAa,QAAQ,iCACnC,mBADmC;AAAA,MAEtC,WAAW,MAAM;AAAA,IACnB,EAAC;AAAA,EACH,CAAC;AAGD,SAAO,GAAG,mBAAmB,MAAM;AACjC,YAAQ,IAAI,8BAA8B;AAC1C,mBAAe;AAAA,EACjB,CAAC;AAED,SAAO,EAAE,YAAY;AACvB;AAGC,OAAe,QAAQ,cAAc,IAAI,aAAa,cAAc;",
  "names": []
}
